// Code generated by MockGen. DO NOT EDIT.
// Source: repository/a2billing.go

// Package repository is a generated GoMock package.
package repository

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockA2billingRepository is a mock of A2billingRepository interface
type MockA2billingRepository struct {
	ctrl     *gomock.Controller
	recorder *MockA2billingRepositoryMockRecorder
}

// MockA2billingRepositoryMockRecorder is the mock recorder for MockA2billingRepository
type MockA2billingRepositoryMockRecorder struct {
	mock *MockA2billingRepository
}

// NewMockA2billingRepository creates a new mock instance
func NewMockA2billingRepository(ctrl *gomock.Controller) *MockA2billingRepository {
	mock := &MockA2billingRepository{ctrl: ctrl}
	mock.recorder = &MockA2billingRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockA2billingRepository) EXPECT() *MockA2billingRepositoryMockRecorder {
	return m.recorder
}

// GetAgentIdsByParentAgentID mocks base method
func (m *MockA2billingRepository) GetAgentIdsByParentAgentID(arg0 context.Context, arg1 int32) ([]int32, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAgentIdsByParentAgentID", arg0, arg1)
	ret0, _ := ret[0].([]int32)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAgentIdsByParentAgentID indicates an expected call of GetAgentIdsByParentAgentID
func (mr *MockA2billingRepositoryMockRecorder) GetAgentIdsByParentAgentID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAgentIdsByParentAgentID", reflect.TypeOf((*MockA2billingRepository)(nil).GetAgentIdsByParentAgentID), arg0, arg1)
}
